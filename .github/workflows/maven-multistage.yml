name: Maven Package - Multi stage docker

on: workflow_dispatch

jobs:

  build:
  
    runs-on: ubuntu-latest
    
    outputs:
      jar_version: ${{ steps.bump.outputs.jar_version }}

    steps:
    - uses: actions/checkout@v2

    - name: Bump jar version
      id: bump
      run: |
        POMPATH=$(git rev-parse --show-toplevel)
        OLD_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        BUMP_MODE="none"
        old="$OLD_VERSION"
        parts=( ${old//./ } )
        bv=$((parts[2] + 1))
        NEW_VERSION="${parts[0]}.${parts[1]}.${bv}"
        echo $parts
        echo "pom.xml at" $POMPATH "will be bumped from" $OLD_VERSION "to" $NEW_VERSION 
        mvn -q versions:set -DnewVersion="${NEW_VERSION}" --file $POMPATH/pom.xml
        echo ::set-output name=jar_version::${NEW_VERSION}
        - name: set fullname
        run: echo FULLNAME="my-app"${NEW_VERSION} >> $GITHUB_ENV

    - name: Login to Docker Hub
      env:
        USERNAME: ${{ secrets.DOCKER_USERNAME }}
        PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
      run: |
        docker login -u $USERNAME -p $PASSWORD
    - name: Docker build
      run: docker build . -f DockerfileMultiStage -t --build-arg fullname=${{ env.FULLNAME }} oralush49/or_repo:${{ steps.bump.outputs.jar_version }}
    - name: Docker push
      run: docker push oralush49/or_repo:${{ steps.bump.outputs.jar_version }}
#   run:
#     runs-on: ubuntu-latest
#     needs: [build]

#     steps:
#     - name: Run container
#       env:
#         USERNAME: ${{ secrets.DOCKER_USERNAME }}
#         PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
#       run: |
#         docker login -u $USERNAME -p $PASSWORD --password-stdin
#         docker run oralush49/or_repo:${{needs.build.outputs.jar_version}}
